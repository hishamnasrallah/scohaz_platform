# Generated by Django 5.1.4 on 2025-01-09 10:28

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_builder', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='App name must be a valid Python identifier.', regex='^[A-Za-z_]\\w*$')])),
                ('overwrite', models.BooleanField(default=False)),
                ('skip_admin', models.BooleanField(default=False)),
                ('skip_tests', models.BooleanField(default=False)),
                ('skip_urls', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='modeldefinition',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='modeldefinition',
            name='fields',
        ),
        migrations.RemoveField(
            model_name='modeldefinition',
            name='name',
        ),
        migrations.RemoveField(
            model_name='modeldefinition',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='modeldefinition',
            name='constraints',
            field=models.JSONField(blank=True, help_text="List of constraints. Example: [{'check': 'price__gte=0', 'name': 'price_positive'}, {'unique': ['email','phone'], 'name': 'unique_email_phone'}].", null=True),
        ),
        migrations.AddField(
            model_name='modeldefinition',
            name='db_table',
            field=models.CharField(blank=True, help_text='Optional custom table name.', max_length=100),
        ),
        migrations.AddField(
            model_name='modeldefinition',
            name='indexes',
            field=models.JSONField(blank=True, help_text="List of indexes. Each item can be a list of field names or a dict with 'fields' and 'name' etc.", null=True),
        ),
        migrations.AddField(
            model_name='modeldefinition',
            name='model_name',
            field=models.CharField(default=1, max_length=100, validators=[django.core.validators.RegexValidator(message='Model name must be a valid Python identifier.', regex='^[A-Za-z_]\\w*$')]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='modeldefinition',
            name='ordering',
            field=models.CharField(blank=True, help_text="Comma-separated. Example: '-created_at,name'", max_length=200),
        ),
        migrations.AddField(
            model_name='modeldefinition',
            name='unique_together',
            field=models.JSONField(blank=True, help_text="List of lists. Example: [['field1','field2'], ['field3','field4']].", null=True),
        ),
        migrations.AddField(
            model_name='modeldefinition',
            name='verbose_name',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='modeldefinition',
            name='verbose_name_plural',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AlterField(
            model_name='modeldefinition',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_builder.applicationdefinition'),
        ),
        migrations.CreateModel(
            name='FieldDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Field name must be a valid Python identifier.', regex='^[A-Za-z_]\\w*$')])),
                ('field_type', models.CharField(choices=[('CharField', 'CharField'), ('TextField', 'TextField'), ('IntegerField', 'IntegerField'), ('FloatField', 'FloatField'), ('DecimalField', 'DecimalField'), ('DateField', 'DateField'), ('DateTimeField', 'DateTimeField'), ('BooleanField', 'BooleanField'), ('JSONField', 'JSONField'), ('EmailField', 'EmailField'), ('URLField', 'URLField'), ('SlugField', 'SlugField'), ('PositiveIntegerField', 'PositiveIntegerField'), ('BigIntegerField', 'BigIntegerField'), ('PositiveSmallIntegerField', 'PositiveSmallIntegerField'), ('SmallIntegerField', 'SmallIntegerField')], max_length=50)),
                ('options', models.CharField(blank=True, help_text='Comma-separated Django field options. Example: max_length=100,unique=True', max_length=250)),
                ('has_choices', models.BooleanField(default=False)),
                ('choices_json', models.JSONField(blank=True, help_text="List of [value,label] pairs. Example: [['draft','Draft'],['published','Published']]", null=True)),
                ('model_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_builder.modeldefinition')),
            ],
        ),
        migrations.CreateModel(
            name='RelationshipDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Relation name must be a valid Python identifier.', regex='^[A-Za-z_]\\w*$')])),
                ('relation_type', models.CharField(choices=[('ForeignKey', 'ForeignKey'), ('OneToOneField', 'OneToOneField'), ('ManyToManyField', 'ManyToManyField')], max_length=50)),
                ('related_model', models.CharField(help_text="Example: 'auth.User' or 'myapp.OtherModel'", max_length=200)),
                ('options', models.CharField(blank=True, help_text='Comma-separated options. Example: on_delete=models.CASCADE,null=True,blank=True', max_length=250)),
                ('model_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_builder.modeldefinition')),
            ],
        ),
        migrations.DeleteModel(
            name='Application',
        ),
    ]
