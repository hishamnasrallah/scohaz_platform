# Generated by Django 5.1.4 on 2025-07-31 19:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('version', '0003_localversion'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComponentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Component name shown in the builder palette', max_length=100, unique=True)),
                ('category', models.CharField(choices=[('basic', 'Basic Components'), ('layout', 'Layout Components'), ('input', 'Input Components'), ('navigation', 'Navigation Components'), ('custom', 'Custom Components')], default='basic', help_text='Component category for organization', max_length=20)),
                ('flutter_widget', models.CharField(help_text='Corresponding Flutter widget name (e.g., Container, Text)', max_length=100)),
                ('icon', models.CharField(default='widgets', help_text='Material icon name for the component', max_length=50)),
                ('description', models.TextField(blank=True, help_text='Description shown in the builder')),
                ('default_properties', models.JSONField(default=dict, help_text='Default property values for new instances')),
                ('editable_properties', models.JSONField(default=list, help_text='List of properties that can be edited in the builder')),
                ('can_have_children', models.BooleanField(default=False, help_text='Whether this component can contain other components')),
                ('max_children', models.IntegerField(blank=True, help_text='Maximum number of children (null for unlimited)', null=True)),
                ('allowed_child_types', models.JSONField(blank=True, default=list, help_text='List of component types allowed as children')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this component is available in the builder')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['category', 'name'],
                'indexes': [models.Index(fields=['category', 'is_active'], name='projects_co_categor_5868ea_idx')],
            },
        ),
        migrations.CreateModel(
            name='FlutterProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Project name shown in the builder', max_length=100)),
                ('package_name', models.CharField(help_text='Android package name (e.g., com.example.myapp)', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='Project description')),
                ('default_language', models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ar-dz', 'Algerian Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('ckb', 'Central Kurdish (Sorani)'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('ig', 'Igbo'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('ky', 'Kyrgyz'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('ms', 'Malay'), ('my', 'Burmese'), ('nb', 'Norwegian Bokm√•l'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('tg', 'Tajik'), ('th', 'Thai'), ('tk', 'Turkmen'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('ug', 'Uyghur'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en', help_text='Default language for the app', max_length=10)),
                ('app_icon', models.ImageField(blank=True, help_text='App icon for the generated Flutter app', null=True, upload_to='project_icons/')),
                ('primary_color', models.CharField(default='#2196F3', help_text='Primary theme color (hex format)', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('app_version', models.ForeignKey(blank=True, help_text='Version control for the generated Flutter app', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flutter_projects', to='version.version')),
                ('supported_languages', models.ManyToManyField(help_text='Languages available in the generated app', related_name='flutter_projects', to='version.localversion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flutter_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Screen name (e.g., HomeScreen, LoginScreen)', max_length=100)),
                ('route', models.CharField(help_text='Flutter route path (e.g., /home, /login)', max_length=255)),
                ('is_home', models.BooleanField(default=False, help_text='Set as the default home screen')),
                ('ui_structure', models.JSONField(default=dict, help_text="JSON representation of the screen's widget tree")),
                ('has_app_bar', models.BooleanField(default=True, help_text='Whether this screen includes an app bar')),
                ('app_bar_title', models.CharField(blank=True, help_text='Title shown in the app bar', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screens', to='projects.flutterproject')),
            ],
            options={
                'ordering': ['project', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='flutterproject',
            index=models.Index(fields=['user', '-created_at'], name='projects_fl_user_id_f5c831_idx'),
        ),
        migrations.AddIndex(
            model_name='screen',
            index=models.Index(fields=['project', 'is_home'], name='projects_sc_project_f107b8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='screen',
            unique_together={('project', 'route')},
        ),
    ]
